name: OpenWRT-Master
on:
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 0 * * *'

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
    - name: Check for new commits
      id: check-rev
      run: |
        rev_remote=$(git ls-remote https://github.com/openwrt/openwrt.git HEAD | awk '{print $1=substr($1,1,10)}' | tr -d "\n")
        echo "$rev_remote"
        rev_last_build=$(curl https://raw.githubusercontent.com/ngerke/openwrt-apu/gh-pages/version.buildinfo -s | cut -d'-' -f2 | tr -d "\n")
        echo "$rev_last_build"
        if [ "$rev_remote" = "$rev_last_build" ]; then echo 'Nothing new, will not build' ; else echo ::set-output name=BUILD::true ; fi

    - name: Checkout config
      if: steps.check-rev.outputs.BUILD
      uses: actions/checkout@v2
      with:
        path: 'openwrt-apu'

    - name: Free disk space
      if: steps.check-rev.outputs.BUILD
      run: |
        sudo swapoff -a >/dev/null 2>&1
        sudo rm -f /swapfile >/dev/null 2>&1
        sudo apt clean >/dev/null 2>&1
        docker rmi $(docker image ls -aq) >/dev/null 2>&1

    - name: Host info
      if: steps.check-rev.outputs.BUILD
      run: |
        echo "Disk space:"
        df -h /
        echo "Workspace:"
        du -h -d 1 .
        echo "Repo HEAD:"
        cd openwrt-apu && git rev-parse HEAD && cd ..

    - name: Build
      id: build
      if: steps.check-rev.outputs.BUILD
      run: |
        chmod +x ./openwrt-apu/build.sh
        docker pull openwrtorg/imagebuilder
        docker run --rm -v ${GITHUB_WORKSPACE}:/home/build/openwrt openwrtorg/imagebuilder ./openwrt-apu/build.sh
        ls -al
        sudo chown -R $(id -u):$(id -g) openwrt
        mv -f openwrt/bin artifacts
        rm -rf openwrt
        echo "Disk space:"
        df -h /
        echo "Workspace:"
        du -h -d 1 .
        ls -alh
        echo ::set-output name=BUILD_REVISION::$(cat artifacts/targets/x86/64/version.buildinfo)

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      if: steps.check-rev.outputs.BUILD
      with:
        name: $ {{ steps.build.outputs.BUILD_REVISION }}
        path: artifacts

    - name: Deploy to pages
      if: steps.check-rev.outputs.BUILD
      env:
        GITHUB_TOKEN: ${{ secrets.push_token }}
      run: |
        sudo apt-get update -q
        sudo apt-get install tree -q -y
        pages_branch="gh-pages"
        repo_url=https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        git clone --depth 1 -b "${pages_branch}" "${repo_url}" "${pages_branch}"
        cd ${pages_branch}
        rm -rf *
        mv -f ../artifacts/* .
        find . -type d -exec sh -c 'cd $0 && tree -H '.' -L 1 --noreport --charset utf-8 > "./0_index.html"' {} \;
        find . -name '*.html' -exec sed -i -e 's#<a href=".">.</a><br>#<a href="../0_index.html">..</a><br>#g' {} \;
        find . -name '*.html' -exec sed -i -e 's#/">#/0_index.html">#g' {} \;
        sed -i -e 's#<a href="../0_index.html">..</a><br>#<a href="./0_index.html">.</a><br>#g' ./0_index.html
        find . -name '*.html' -exec sed -i '/0_index.html<\/a><br>/d' {} \;
        find . -type d -exec sh -c 'cd $0 && mv 0_index.html index.html' {} \;
        find . -name '*.html' -exec sed -i -e 's/0_index.html/index.html/g' {} \;
        curl -s -X POST "https://img.shields.io/badge/Revision-$(cat targets/x86/64/version.buildinfo)-blue" > revision.svg
        git add .
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
        git diff-index --quiet ${pages_branch} || git commit -m "$(date '+%d/%m/%Y %H:%M:%S') nightly build"
        git push "${repo_url}" HEAD:${pages_branch}

    - name: On failure
      if: failure()
      run: |
        echo "Disk space:"
        df -h /
        echo "Workspace:"
        du -h -d 1 .
        echo "Repo HEAD:"
        cd openwrt-apu && git rev-parse HEAD && cd ..
        echo "Event path:"
        cat ${GITHUB_EVENT_PATH}
