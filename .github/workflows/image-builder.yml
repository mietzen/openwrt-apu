name: OpenWRT APU2 Image Builder
on:
  push:
    branches: [ master ]
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 0 * * *'

jobs:
  commits:
    runs-on: ubuntu-latest
    name: "Check for new commits"
    outputs:
      new: ${{ steps.check.outputs.NEW }}
    steps:
    - name: Check for new commits on OpenWRT Master
      id: check
      run: |
        rev_remote=$(curl https://downloads.openwrt.org/snapshots/targets/x86/64/version.buildinfo -s | tr -d "\n")
        echo "$rev_remote"
        rev_last_build=$(curl "https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/gh-pages/latest-build.rev" -s | tr -d "\n")
        echo "$rev_last_build"
        if [ "$rev_remote" != "$rev_last_build" ] || [ "$GITHUB_EVENT_NAME" = "pull_request" ] || [ "$GITHUB_EVENT_NAME" = "push" ]; then
          echo ::set-output name=NEW::true ;
        fi

  build-image:
    runs-on: ubuntu-latest
    name: "Build Image + SDK"
    needs: commits
    if: ${{needs.commits.outputs.new}}
    outputs:
      build_rev: ${{ steps.check.Build.BUILD_REV }}    
    steps:
    - name: Checkout config
      uses: actions/checkout@v2
      with:
        path: 'openwrt-apu'

    - name: Free disk space
      run: |
        cd openwrt-apu
        chmod +x ./free-space.sh
        ./free-space.sh

    - name: Install dependencies
      run: |
        cd openwrt-apu
        chmod +x ./install-deps.sh
        ./install-deps.sh

    - name: Host info
      run: |
        echo "Disk space:"
        df -h /
        echo "Workspace:"
        du -h -d 1 .
        echo "Repo HEAD:"
        cd openwrt-apu && git rev-parse HEAD && cd ..

    - name: Build and upload
      env:
        GITHUB_TOKEN: ${{ secrets.push_token }}
        BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}      
      run: |
        set -ex

        ## Set env
        export GITHUB_TOKEN
        export BINTRAY_API_KEY
        export GITHUB_ACTOR
        export GITHUB_REPOSITORY

        ## Clone Repo
        git clone https://git.openwrt.org/openwrt/openwrt.git openwrt
        
        cp openwrt-apu/build-openWRT-* .

        ## Set Rev
        ./build-openWRT-set-rev.sh

        ## Prepare .config
        ./build-openWRT-set-repo.sh

        ## Build Base
        ./build-openWRT-build-base.sh

        ## Build all pkgs
        ./build-openWRT-build-pkgs.sh

        ## Upload to bintray
        ./build-openWRT-upload.sh

        ## GH-Pages
        ./build-openWRT-build-gh-pages.sh


    - name: 'Upload Logs'
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: image-logs
        path: image-logs.zip
        retention-days: 5

    - name: 'Upload Logs'
      uses: actions/upload-artifact@v2
      if: ${{ always() }}
      with:
        name: pkg-logs
        path: pkg-logs.zip
        retention-days: 5
